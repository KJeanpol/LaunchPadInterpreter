%{
	#include<stdio.h>
	extern int yylineno; 
%}

/*NOTAS MUSICALES*/

%token TIEMPO
%token VTIEMPO
%token VARIABLE
%token COMENTARIO_I
%token COMENTARIO_F
%token PUNTO_COMA
%token PROCEDIMIENTO
%token DEFINIR
%token INCREMENTO

%token ENCENDER_TODOS
%token APAGAR_TODOS
%token ENCENDER
%token APAGAR
%token ENCENDER_SONIDO
%token APAGAR_SONIDO

%token INI_LOOP
%token FIN_LOOP
%token INI_FOR
%token FIN_FOR
%token INI_IF
%token FIN_IF
%token ELSE
%token ELSE_IF
%token IGUAL
%token DECLARAR_PROCEDIMIENTO
%token CALL
%token PARENTESIS_A
%token PARENTESIS_C
%token COMA
%token INI_PROCEDIMIENTO
%token FIN_PROCEDIMIENTO
%token IN
%token STEP
%token THEN
%token EXIT
%token TIMES
%token NOMBRE
%token DECREMENTO
%token INI_VARIABLE

%start PRINCIPIO

%% 

	PRINCIPIO: COMENTARIO HOJA_D;
	
	COMENTARIO: COMENTARIO_I NOMBRE COMENTARIO_F;
	
	DEFINIR_VAR: DEFINIR VARIABLE VTIEMPO PUNTO_COMA;
	
	MODIFICAR_VAR: INCREMENTO VARIABLE INCREMENTO PUNTO_COMA|
				   DECREMENTO VARIABLE DECREMENTO PUNTO_COMA|
				   VARIABLE IGUAL TIEMPO PUNTO_COMA;	
	
	HOJA_D: DEFINIR VARIABLE PUNTO_COMA | HOJA_D HOJA_D;

		
	INSTANCIAR_VAR: INI_VARIABLE VARIABLE IGUAL TIEMPO PUNTO_COMA;
	
	TURNON: ENCENDER_TODOS PARENTESIS_A NOMBRE COMA NOMBRE PARENTESIS_C PUNTO_COMA|
			ENCENDER PARENTESIS_A NOMBRE COMA NOMBRE COMA NOMBRE PARENTESIS_C PUNTO_COMA;
			
	TURNOFF: APAGAR_TODOS  PARENTESIS_A NOMBRE COMA NOMBRE PARENTESIS_C PUNTO_COMA|
			APAGAR PARENTESIS_A NOMBRE COMA NOMBRE COMA NOMBRE PARENTESIS_C PUNTO_COMA;
			
	SOUNDON: ENCENDER_SONIDO PARENTESIS_A TIEMPO PARENTESIS_C PUNTO_COMA;
	
	SOUNDOFF: ENCENDER_SONIDO PARENTESIS_A PARENTESIS_C PUNTO_COMA;

	
	EXPRESION: TURNON|
			   TURNOFF|
			   SOUNDON|
			   SOUNDOFF|
			   INSTANCIAR_VAR|
			   DOW_LOOP|
			   FOR_LOOP|
			   IF_SENTENCIA|
			   EXPRESION EXPRESION;
	
	DOW_LOOP: INI_LOOP VARIABLE IN TIEMPO STEP TIEMPO EXPRESION EXIT FIN_LOOP PUNTO_COMA;
			  
	FOR_LOOP: INI_FOR TIEMPO TIMES EXPRESION FIN_FOR;
	
	IF_SENTENCIA: INI_IF VARIABLE IGUAL TIEMPO THEN EXPRESION ELSEFIN FIN_IF PUNTO_COMA|
				  INI_IF VARIABLE IGUAL TIEMPO THEN EXPRESION ELSEIF ELSEFIN FIN_IF PUNTO_COMA;
	
	ELSEIF: ELSE_IF VARIABLE IGUAL NOMBRE PUNTO_COMA EXPRESION|
			ELSEIF ELSEIF;
			
	ELSEFIN: ELSE EXPRESION;

	
	
	
				

%%

main(){
	if(yyparse()==0)
	printf("\nAnalisis Sintactico concluido sin errores\n");
}
yyerror(char* mensaje){
	printf("Error sintactico %s",mensaje);
	printf(" en linea %d\n",yylineno);
}